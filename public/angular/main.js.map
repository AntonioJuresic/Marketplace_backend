{"version":3,"sources":["./src/app/main-page/main-page.component.html","./src/app/main-page/main-page.component.ts","./src/app/administration/administration.component.ts","./src/app/administration/administration.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/shared/services/advertisement-detail.service.ts","./src/app/administration/admin-components/adminconditions/adminconditions.component.ts","./src/app/administration/admin-components/adminconditions/adminconditions.component.html","./src/app/advertisement-detail/advertisement-detail.component.ts","./src/app/advertisement-detail/advertisement-detail.component.html","./src/environments/environment.ts","./src/app/pipes/filter.pipe.ts","./src/app/administration/admin-components/adminusers/adminusers.component.ts","./src/app/administration/admin-components/adminusers/adminusers.component.html","./src/app/pipes/filter-price.pipe.ts","./src/app/shared/models/user.model.ts","./src/app/user-detail/user-detail.component.ts","./src/app/user-detail/user-detail.component.html","./src/app/shared/models/advertisement.model.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/shared/services/authentication.service.ts","./src/app/new-advertisement/new-advertisement.component.ts","./src/app/new-advertisement/new-advertisement.component.html","./src/app/shared/services/authorization-guard.service.ts","./src/app/app.module.ts","./src/app/administration/admin-components/adminplaces/adminplaces.component.ts","./src/app/administration/admin-components/adminplaces/adminplaces.component.html","./src/app/shared/services/condition.service.ts","./src/app/administration/admin-components/admincategories/admincategories.component.ts","./src/app/administration/admin-components/admincategories/admincategories.component.html","./src/app/shared/services/user-detail.service.ts","./src/app/shared/services/category.service.ts","./src/app/shared/services/data.service.ts","./src/app/navigation/navigation.component.html","./src/app/navigation/navigation.component.ts","./src/app/my-profile/my-profile.component.html","./src/app/my-profile/my-profile.component.ts","./src/app/shared/services/user.service.ts","./src/app/administration/admin-components/adminadvertisements/adminadvertisements.component.ts","./src/app/administration/admin-components/adminadvertisements/adminadvertisements.component.html","./src/app/shared/services/place.service.ts","./src/app/shared/services/advertisement.service.ts","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/advertisement-edit/advertisement-edit.component.ts","./src/app/advertisement-edit/advertisement-edit.component.html","./src/app/my-advertisements/my-advertisements.component.ts","./src/app/my-advertisements/my-advertisements.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object","./src/app/register/ConfirmedValidator.validator.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["<div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n        <div class=\"col-2\">\r\n            <div class=\"form-group\">\r\n                <label>\r\n                    <p class=\"font-weight-bold\">Odabir kategorije:</p>\r\n                </label>\r\n                <select class=\"form-control\" [(ngModel)]=\"QueryCategory\">\r\n                    <option selected value=\"\">Sve kategorije</option>\r\n                    <option *ngFor=\"let category of categories\">{{category.categoryName}}</option>\r\n                </select>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n                <label>\r\n                    <p class=\"font-weight-bold\">Pretraga po imenu:</p>\r\n                </label>\r\n                <input type=\"text\" class=\"form-control\" [(ngModel)]=\"QueryName\">\r\n            </div>\r\n\r\n            <br>\r\n\r\n            <label>\r\n                <p class=\"font-weight-bold\">Pretraga po cijeni:</p>\r\n            </label>\r\n\r\n            <div class=\"form-group\">\r\n                <p>Najniža cijena:</p>\r\n                <input type=\"number\" class=\"form-control\" min=\"0\" [(ngModel)]=\"QueryMinimalPrice\">\r\n\r\n                <p>Najviša cijena:</p>\r\n                <input type=\"number\" class=\"form-control\" min=\"0\" [(ngModel)]=\"QueryMaximalPrice\">\r\n            </div>\r\n\r\n            <br>\r\n\r\n            <div class=\"form-group\">\r\n                <label>\r\n                    <p class=\"font-weight-bold\">Odabir stanja:</p>\r\n                </label>\r\n                <select class=\"form-control\" [(ngModel)]=\"QueryCondition\">\r\n                    <option selected value=\"\">Bilo koje stanje</option>\r\n                    <option *ngFor=\"let condition of conditions\">{{condition.conditionName}}</option>\r\n                </select>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n                <label>\r\n                    <p class=\"font-weight-bold\">Pretraga po lokaciji:</p>\r\n                </label>\r\n                <input type=\"text\" class=\"form-control\" [(ngModel)]=\"QueryPlace\">\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <div class=\"col-10\">\r\n            <table class=\"table table-striped\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">Kategorija</th>\r\n                        <th scope=\"col\">Naziv</th>\r\n                        <th scope=\"col\">Cijena</th>\r\n                        <th scope=\"col\">Stanje</th>\r\n                        <th scope=\"col\">Lokacija</th>\r\n                    </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                    <tr\r\n                        *ngFor=\"let advertisement of advertisements | filter: 'name' : QueryName | filter: 'categoryNameFK' : QueryCategory  | filterPrice: 'price' : [QueryMinimalPrice, QueryMaximalPrice] | filter: 'conditionNameFK' : QueryCondition | filter: 'placeNameFK' : QueryPlace\">\r\n                        <td>{{advertisement.categoryNameFK}}</td>\r\n                        <td>\r\n                            <a [routerLink]=\"['oglas/', advertisement._id]\">{{advertisement.name}}</a>\r\n                        </td>\r\n                        <td>{{advertisement.price}}</td>\r\n                        <td>{{advertisement.conditionNameFK}}</td>\r\n                        <td>{{advertisement.placeNameFK}}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { Advertisement } from '../shared/models/advertisement.model';\nimport { Category } from '../shared/models/category.model';\nimport { Condition } from '../shared/models/condition.model';\nimport { Place } from '../shared/models/place.model';\nimport { AdvertisementService } from '../shared/services/advertisement.service';\nimport { CategoryService } from '../shared/services/category.service';\nimport { ConditionService } from '../shared/services/condition.service';\nimport { PlaceService } from '../shared/services/place.service';\n\n@Component({\n    selector: 'app-main-page',\n    templateUrl: './main-page.component.html',\n    styleUrls: ['./main-page.component.css']\n})\nexport class MainPageComponent implements OnInit {\n\n    QueryCategory = '';\n    QueryName = '';\n\n    QueryMinimalPrice = null;\n    QueryMaximalPrice = null;\n\n    QueryCondition = '';\n    QueryPlace = '';\n\n    advertisements : Advertisement[];\n    advertisementsSubject : BehaviorSubject<Advertisement[]>;\n    advertisementsSubscription : Subscription;\n\n    categories : Category[];\n    categoriesSubject : BehaviorSubject<Category[]> ;\n    categoriesSubscription : Subscription;\n\n    conditions : Condition[];\n    conditionsSubject : BehaviorSubject<Condition[]>;\n    conditionsSubscription : Subscription;\n\n    places : Place[];\n    placesSubject : BehaviorSubject<Place[]>;\n    placesSubscription : Subscription;\n\n\n    constructor(\n        private advertisementsService : AdvertisementService,\n        private categoriesService : CategoryService,\n        private conditionsService : ConditionService,\n        private placesService : PlaceService\n    ) { }\n\n    ngOnInit() : void {\n        this.advertisementsSubject = this.advertisementsService.getAdvertisements();\n        this.advertisementsSubscription = this.advertisementsSubject\n            .subscribe(res => {\n                this.advertisements = res;\n            });\n\n        this.categoriesSubject = this.categoriesService.getCategories();\n        this.categoriesSubscription = this.categoriesSubject\n            .subscribe(res => {\n                this.categories = res;\n            });\n\n        this.conditionsSubject = this.conditionsService.getConditions();\n        this.conditionsSubscription = this.conditionsSubject\n            .subscribe(res => {\n                this.conditions = res;\n            });\n\n        this.placesSubject = this.placesService.getPlaces();\n        this.placesSubscription = this.placesSubject\n            .subscribe(res => {\n                this.places = res;\n            });\n    }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthorizationGuardService } from '../shared/services/authorization-guard.service';\n\n@Component({\n    selector: 'app-administration',\n    templateUrl: './administration.component.html',\n    styleUrls: ['./administration.component.css']\n})\nexport class AdministrationComponent implements OnInit {\n\n    constructor(\n        private authorizationGuardService: AuthorizationGuardService\n    ) { }\n\n    ngOnInit(): void {\n        this.authorizationGuardService.canAccessAdmin();\n    }\n\n}\n","<app-adminusers></app-adminusers>\r\n<hr>\r\n<app-adminadvertisements></app-adminadvertisements>\r\n<hr>\r\n<app-admincategories></app-admincategories>\r\n<hr>\r\n<app-adminconditions></app-adminconditions>\r\n<hr>\r\n<app-adminplaces></app-adminplaces>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { Place } from '../shared/models/place.model';\nimport { User } from '../shared/models/user.model';\nimport { AuthorizationGuardService } from '../shared/services/authorization-guard.service';\nimport { PlaceService } from '../shared/services/place.service';\nimport { UserService } from '../shared/services/user.service';\nimport { confirmedValidator } from './ConfirmedValidator.validator';\n\n@Component({\n    selector: 'app-register',\n    templateUrl: './register.component.html',\n    styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n    newUser : User;\n    public registerForm : FormGroup;\n\n    places: Place[];\n    placesSubject: BehaviorSubject<Place[]>;\n    placesSubscription: Subscription;\n\n    constructor(\n        private authorizationGuardService : AuthorizationGuardService,\n        \n        private placesService : PlaceService,\n        private userService : UserService,\n\n        private formBuilder : FormBuilder,\n        private router : Router\n    ) { }\n\n    ngOnInit() : void {\n        this.authorizationGuardService.canNotAcessWhileLogged();\n\n        this.placesSubject = this.placesService.getPlaces();\n        this.placesSubscription = this.placesSubject\n            .subscribe(res => {\n                this.places = res;\n            });\n\n        this.registerForm = this.formBuilder.group({\n            username: new FormControl(\"\", [Validators.required, Validators.minLength(4)]),\n            email: new FormControl(\"\", [Validators.required, Validators.email]),\n            admin: new FormControl(\"\"),\n\n            password1: new FormControl(\"\", Validators.required),\n            password2: new FormControl(\"\", Validators.required),\n\n            name: new FormControl(\"\", Validators.required),\n            surname: new FormControl(\"\", Validators.required),\n            dateOfBirth: new FormControl(\"\", Validators.required),\n\n            streetName: new FormControl(\"\", Validators.required),\n            streetNumber: new FormControl(\"\", Validators.required),\n            placeNameFK: new FormControl(\"\", Validators.required)\n        },\n            {\n                validator: confirmedValidator('password1', 'password2')\n            });\n    }\n\n    get username() { return this.registerForm.get(\"username\"); }\n    get email() { return this.registerForm.get(\"email\"); }\n    get admin() { return this.registerForm.get(\"admin\"); }\n\n    get password1() { return this.registerForm.get(\"password1\"); }\n    get password2() { return this.registerForm.get(\"password2\"); }\n\n    get name() { return this.registerForm.get(\"name\"); }\n    get surname() { return this.registerForm.get(\"surname\"); }\n    get dateOfBirth() { return this.registerForm.get(\"dateOfBirth\"); }\n\n    get streetName() { return this.registerForm.get(\"streetName\"); }\n    get streetNumber() { return this.registerForm.get(\"streetNumber\"); }\n    get placeNameFK() { return this.registerForm.get(\"placeNameFK\"); }\n\n    get f() {\n        return this.registerForm.controls;\n    }\n\n    onSubmit() {\n\n        this.newUser = new User();\n\n        this.newUser.username = this.registerForm.value.username;\n        this.newUser.email = this.registerForm.value.email;\n        this.newUser.password = this.registerForm.value.password1;\n\n        if (this.registerForm.value.admin) {\n            this.newUser.admin = this.registerForm.value.admin;\n        } else {\n            this.newUser.admin = false;\n        }\n\n        this.newUser.name = this.registerForm.value.name;\n        this.newUser.surname = this.registerForm.value.surname;\n        this.newUser.dateOfBirth = this.registerForm.value.dateOfBirth;\n\n        this.newUser.streetName = this.registerForm.value.streetName;\n        this.newUser.streetNumber = this.registerForm.value.streetNumber;\n        this.newUser.placeNameFK = this.registerForm.value.placeNameFK;\n\n        console.log(this.newUser);\n        this.userService.addUser(this.newUser);\n\n        this.router.navigate([\"/prijava\"]);\n    }\n\n    ngOnDestroy() {\n        this.placesSubscription.unsubscribe();\n    }\n\n\n}","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-12\">\n            <br>\n            <h1 class=\"text-center\">Registracija</h1>\n            <br>\n            \n            <a routerLink=\"/prijava\" routerLinkActive=\"active\">\n                <p style=\"text-align: center;\">\n                    Već imate korisnički profil? Idite na prijavu</p>\n            </a>\n            <br>\n\n            <form [formGroup]=\"registerForm\" (submit)=\"onSubmit()\">\n\n                <div class=\"row\">\n                    <div class=\"col-12 col-lg-6\">\n                        <div class=\"form-group\">\n                            <label for=\"username\">Korisničko ime:</label>\n                            <input type=\"text\" class=\"form-control\" name=\"username\" id=\"username\"\n                                formControlName=\"username\" [ngClass]=\"{'is-invalid': ((username.dirty || username.touched) && username.invalid),\n                            'is-valid': ((username.dirty || username.touched) && username.valid) }\">\n\n                            <div class=\"invalid-feedback\">Korisnicko ime mora biti dulje od 4 znaka</div>\n                        </div>\n\n                        <div class=\"form-group\">\n                            <label for=\"email\">Email:</label>\n                            <input type=\"email\" class=\"form-control\" name=\"email\" id=\"email\" formControlName=\"email\"\n                                [ngClass]=\"{'is-invalid': ((email.dirty || email.touched) && email.invalid),\n                            'is-valid': ((email.dirty || email.touched) && email.valid) }\">\n\n                            <div class=\"invalid-feedback\">Molimo Vas upišite valjanu email adresu</div>\n                        </div>\n\n                        <div class=\"form-group\">\n                            <label for=\"password1\">Šifra:</label>\n                            <input type=\"password\" class=\"form-control\" name=\"password1\" id=\"password1\"\n                                formControlName=\"password1\" [ngClass]=\"{'is-invalid': ((password1.dirty || password1.touched)\n                            && (password1.invalid || password1.value != password2.value)),\n                            'is-valid': ((password1.dirty || password1.touched) && password1.valid) }\">\n\n                            <div class=\"invalid-feedback\">\n                                <div *ngIf=\"(password1.dirty || password1.touched) && password1.invalid\">\n                                    Molimo Vas upišite šifru\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"form-group\">\n                            <label for=\"password2\">Ponovljena šifra:</label>\n                            <input type=\"password\" class=\"form-control\" name=\"password2\" id=\"password2\"\n                                formControlName=\"password2\" [ngClass]=\"{'is-invalid': ((password2.dirty || password2.touched)\n                            && (password2.invalid || password1.value != password2.value)),\n                            'is-valid': ((password2.dirty || password2.touched) && password2.valid) }\">\n\n                            <div class=\"invalid-feedback\">\n                                <div *ngIf=\"(password2.dirty || password2.touched) && password2.invalid\">\n                                    Molimo Vas ponovite upis šifre\n                                </div>\n\n                                <div\n                                    *ngIf=\"(password2.dirty || password2.touched) && password1.value != password2.value\">\n                                    Šifre se ne popudaraju\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"form-check\">\n                            <input type=\"checkbox\" class=\"form-check-input\" name=\"admin\" id=\"admin\"\n                                formControlName=\"admin\">\n                            <label class=\"form-check-label\" for=\"admin\"> Admin </label>\n                        </div>\n                    </div>\n\n                    <div class=\"col-12 col-lg-6\">\n                        <div class=\"form-group\">\n                            <label for=\"name\">Ime:</label>\n                            <input type=\"text\" class=\"form-control\" name=\"name\" id=\"name\" formControlName=\"name\"\n                                [ngClass]=\"{'is-invalid': ((name.dirty || name.touched) && name.invalid),\n                                'is-valid': ((name.dirty || name.touched) && name.valid) }\">\n\n                            <div class=\"invalid-feedback\">Molimo Vas upišite Vaše ime</div>\n                        </div>\n\n                        <div class=\"form-group\">\n                            <label for=\"surname\">Prezime:</label>\n                            <input type=\"text\" class=\"form-control\" name=\"surname\" id=\"surname\"\n                                formControlName=\"surname\" [ngClass]=\"{'is-invalid': ((surname.dirty || surname.touched) && surname.invalid),\n                                'is-valid': ((surname.dirty || surname.touched) && surname.valid) }\">\n\n                            <div class=\"invalid-feedback\">Molimo Vas upišite Vaše prezime</div>\n                        </div>\n\n                        <div class=\"form-group\">\n                            <label for=\"dateOfBirth\">Datum rođenja:</label>\n                            <input type=\"date\" class=\"form-control\" name=\"dateOfBirth\" id=\"dateOfBirth\"\n                                formControlName=\"dateOfBirth\" [ngClass]=\"{'is-invalid': ((dateOfBirth.dirty || dateOfBirth.touched) && dateOfBirth.invalid),\n                                'is-valid': ((dateOfBirth.dirty || dateOfBirth.touched) && dateOfBirth.valid) }\">\n\n                            <div class=\"invalid-feedback\">Molimo Vas odaberite Vaš datum rođenja</div>\n                        </div>\n\n                        <div class=\"form-row\">\n                            <div class=\"form-group col-12 col-lg-8\">\n                                <label for=\"streetName\">Ime ulice:</label>\n                                <input type=\"text\" class=\"form-control\" name=\"streetName\" id=\"streetName\"\n                                    formControlName=\"streetName\" [ngClass]=\"{'is-invalid': ((streetName.dirty || streetName.touched) && streetName.invalid),\n                                        'is-valid': ((streetName.dirty || streetName.touched) && streetName.valid) }\">\n\n                                <div class=\"invalid-feedback\">Molimo Vas upišite ime Vaše ulice</div>\n                            </div>\n\n                            <div class=\"form-group col-12 col-lg-4\">\n                                <label for=\"streetNumber\">Kućni broj:</label>\n                                <input type=\"text\" class=\"form-control\" name=\"streetNumber\" id=\"streetNumber\"\n                                    formControlName=\"streetNumber\"\n                                    [ngClass]=\"{'is-invalid': ((streetNumber.dirty || streetNumber.touched) && streetNumber.invalid),\n                                        'is-valid': ((streetNumber.dirty || streetNumber.touched) && streetNumber.valid) }\">\n\n                                <div class=\"invalid-feedback\">Molimo Vas upišite broj Vaše adrese</div>\n                            </div>\n                        </div>\n\n                        <div class=\"form-group\">\n                            <label for=\"placeNameFK\">Naziv mjesta:</label>\n                            <select class=\"form-control\" name=\"placeNameFK\" id=\"placeNameFK\"\n                                formControlName=\"placeNameFK\" [ngClass]=\"{'is-invalid': ((placeNameFK.dirty || placeNameFK.touched) && (placeNameFK.invalid || placeNameFK.value == 'Odabir mjesta')),\n                                    'is-valid': ((placeNameFK.dirty || placeNameFK.touched) && placeNameFK.valid) }\">\n\n                                <option selected>Odabir mjesta</option>\n                                <option *ngFor=\"let place of places\">{{place.placeName}}</option>\n                            </select>\n\n                            <div class=\"invalid-feedback\">Molimo Vas odaberite Vaše mjesto</div>\n                        </div>\n                    </div>\n                </div>\n\n                <br>\n                <br>\n\n                <div class=\"col text-center\">\n                    <input type=\"submit\" class=\"btn btn-primary\" value=\"Registriraj me\"\n                        [disabled]=\"!registerForm.valid\">\n                </div>\n            </form>\n        </div>\n\n        <div class=\"col-lg-4\"></div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Advertisement } from '../models/advertisement.model';\nimport { DataService } from './data.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AdvertisementDetailService {\n    \n    advertisement : Advertisement = new Advertisement;\n    advertisementSubject : BehaviorSubject<Advertisement> = new BehaviorSubject(null);\n    \n    constructor( private dataService : DataService ) { }\n\n    getAdvertisement(_id) {\n        this.dataService.getAdvertisement(_id)\n        .subscribe((res: { status: number, description?: string, advertisement: Advertisement }) => {\n            console.log(res);\n            this.advertisement = res.advertisement;\n            this.advertisementSubject.next(this.advertisement);\n        });\n\n        return this.advertisementSubject;\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { Condition } from 'src/app/shared/models/condition.model';\nimport { ConditionService } from 'src/app/shared/services/condition.service';\n\n@Component({\n    selector: 'app-adminconditions',\n    templateUrl: './adminconditions.component.html',\n    styleUrls: ['./adminconditions.component.css']\n})\nexport class AdminconditionsComponent implements OnInit {\n\n    conditions: Condition[];\n    conditionsSubject : BehaviorSubject<Condition[]> = new BehaviorSubject(null);\n    subscription : Subscription;\n\n    newConditionName : string;\n\n    edit_id : string;\n    editConditionName : string;\n\n    oneCondition : Condition;\n\n    constructor(\n        private conditionService : ConditionService\n    ) { }\n\n    ngOnInit() : void {\n        this.conditionsSubject = this.conditionService.getConditions();\n        this.subscription = this.conditionsSubject\n            .subscribe(res => {\n                this.conditions = res;\n            });\n    }\n\n    addCondition() {\n        this.conditionService.addCondition({ conditionName: this.newConditionName});\n        this.newConditionName = \"\";\n    }\n\n    sendToEdit(condition) {\n        this.edit_id = condition._id;\n        this.editConditionName = condition.conditionName;\n    }\n\n    editCondition(condition) {\n        this.conditionService.editCondition(condition);\n    }\n\n    getCondition(i) {\n        let c = this.conditions[i];\n        console.log(this.conditionService.getCondition(c._id));\n    }\n\n    deleteCondition(i) {\n        let c = this.conditions[i];\n        this.conditionService.deleteCondition(c._id);\n    }\n\n    ngOnDestroy() {\n        this.subscription.unsubscribe();\n    }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-12\">\n            <h1>Stanja</h1>\n        </div>\n    </div>\n</div>\n\n<br>\n\n<table class=\"table table-striped table-bordered table-hover\">\n    <tr>\n        <th>i</th>\n        <th>_id</th>\n        <th>conditionName</th>\n        <th>getCondition(i)</th>\n        <th>sendToEdit(condition)</th>\n        <th>deleteCondition(i)</th>\n    </tr>\n\n    <tr *ngFor=\"let condition of conditions; let i=index;\">\n        <td>{{i+1}}</td>\n\n        <td>{{condition._id}}</td>\n        <td>{{condition.conditionName}}</td>\n\n        <td><button class=\"btn btn-success\" (click)=\"getCondition(i)\">Ispiši stanje</button></td>\n        <td><button class=\"btn btn-warning\" (click)=\"sendToEdit(condition)\">Uredi stanje</button></td>\n        <td><button class=\"btn btn-danger\" (click)=\"deleteCondition(i)\">Izbriši stanje</button></td>\n    </tr>\n</table>\n\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-6\">\n            <h3>Novo stanje</h3>\n                <div class=\"form-group\">\n                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"newConditionName\">\n                    <br>\n                    <button class=\"btn btn-info\" (click)=\"addCondition()\">Dodaj</button>\n                </div>\n        </div>\n\n        <div class=\"col-6\">\n            <h3>Uredi stanje: {{edit_id}}</h3>\n                <div class=\"form-group\">\n                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"editConditionName\">\n                    <br>\n                    <button class=\"btn btn-info\"\n                        (click)=\"editCondition({_id : this.edit_id, conditionName : this.editConditionName})\">Uredi</button>\n                </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { Advertisement } from '../shared/models/advertisement.model';\nimport { User } from '../shared/models/user.model';\nimport { AdvertisementDetailService } from '../shared/services/advertisement-detail.service';\nimport { AdvertisementService } from '../shared/services/advertisement.service';\nimport { DataService } from '../shared/services/data.service';\nimport { UserDetailService } from '../shared/services/user-detail.service';\n\n@Component({\n    selector: 'app-advertisement-detail',\n    templateUrl: './advertisement-detail.component.html',\n    styleUrls: ['./advertisement-detail.component.css']\n})\nexport class AdvertisementDetailComponent implements OnInit {\n\n    _id = null;\n    private routeSubscription : Subscription;\n\n    advertisement : Advertisement = new Advertisement;\n    advertisementSubject : BehaviorSubject<Advertisement> = new BehaviorSubject(null);\n    advertisementSubscription : Subscription;\n\n    constructor(\n        private route : ActivatedRoute,\n        private advertisementDetailService : AdvertisementDetailService\n    ) { }\n\n    ngOnInit() : void {\n        this.routeSubscription = this.route.params.subscribe(params => {\n            this._id = params['id']\n        });\n\n        this.advertisementSubject = this.advertisementDetailService.getAdvertisement(this._id);\n        this.advertisementSubscription = this.advertisementSubject\n            .subscribe(res => {\n                this.advertisement = res;\n            });\n    }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-12\">\n            <div *ngIf=\"advertisement\">\n                <h1>{{advertisement.name}}</h1>\n                <br>\n                <h2 style=\"font-weight: lighter;\">Cijena: <span style=\"font-weight: bold;\">{{advertisement.price}}\n                        HRK</span></h2>\n                <br>\n                <h2 style=\"font-weight: lighter;\">Opis: <span\n                        style=\"font-weight: bold;\">{{advertisement.description}}</span></h2>\n                <br>\n                <h2 style=\"font-weight: lighter;\">Stanje: <span\n                        style=\"font-weight: bold;\">{{advertisement.conditionNameFK}}</span></h2>\n                <br>\n                <h2 style=\"font-weight: lighter;\">Lokacija: <span\n                        style=\"font-weight: bold;\">{{advertisement.placeNameFK}}</span></h2>\n            </div>\n        </div>\n    </div>\n</div>\n\n<br>\n<hr>\n<div *ngIf=\"advertisement\">\n    <app-user-detail [_id]=\"advertisement.seller_idFK\"></app-user-detail>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n    production: false,\n    apiRoot: \"http://localhost:8081/api\" \n\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'filter'\n})\nexport class FilterPipe implements PipeTransform {\n\n    transform(items: any[], field: string, value: string): any[] {\n        if (!items || !value || !field) {\n            return items;\n        }\n        return items.filter(item => item[field].toLowerCase().includes(value.toLowerCase()));\n    }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { User } from 'src/app/shared/models/user.model';\nimport { UserService } from 'src/app/shared/services/user.service';\n\n@Component({\n    selector: 'app-adminusers',\n    templateUrl: './adminusers.component.html',\n    styleUrls: ['./adminusers.component.css']\n})\nexport class AdminusersComponent implements OnInit {\n\n    users: User[];\n    usersSubject: BehaviorSubject<User[]> = new BehaviorSubject(null);\n    subscription : Subscription;\n\n    oneUser : User;\n\n    constructor(\n        private userService : UserService\n    ) { }\n\n    ngOnInit(): void {\n        this.usersSubject = this.userService.getUsers();\n        this.subscription = this.usersSubject\n            .subscribe(res => {\n                this.users = res;\n            });\n    }\n\n    getUser(i) {\n        let u = this.users[i];\n        console.log(this.userService.getUser(u._id));\n    }\n    \n    deleteUser(i) {\n        let u = this.users[i];\n        this.userService.deleteUser(u._id);\n    }\n\n    ngOnDestory() {\n        this.subscription.unsubscribe();\n    }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-12\">\n            <h1>Korisnici</h1>\n        </div>\n    </div>\n</div>\n\n<br>\n\n<table class=\"table table-striped table-bordered table-hover\">\n    <tr>\n        <th>i</th>\n        <th>_id</th>\n\n        <th>username</th>\n        <th>email</th>\n        <th>admin</th>\n\n        <th>name</th>\n        <th>surname</th>\n        <th>dateOfBirth</th>\n\n        <th>streetName</th>\n        <th>streetNumber</th>\n        <th>placeNameFK</th>\n        \n        <th>getUser(i)</th>\n        <th>deleteUser(i)</th>\n    </tr>\n\n    <tr *ngFor=\"let user of users; let i=index;\">\n        <td>{{i+1}}</td>\n        <td>{{user._id}}</td>\n\n        <td>{{user.username}}</td>\n        <td>{{user.email}}</td>\n        <td>{{user.admin}}</td>\n\n        <td>{{user.name}}</td>\n        <td>{{user.surname}}</td>\n        <td>{{user.dateOfBirth}}</td>\n\n        <td>{{user.streetName}}</td>\n        <td>{{user.streetNumber}}</td>\n        <td>{{user.placeNameFK}}</td>\n\n        <td><button class=\"btn btn-success\" (click)=\"getUser(i)\">Ispiši korisnika</button></td>\n        <td><button class=\"btn btn-danger\" (click)=\"deleteUser(i)\">Izbriši korisnika</button></td>\n    </tr>\n</table>","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'filterPrice'\n})\nexport class FilterPricePipe implements PipeTransform {\n\n    transform(ulaz: any[], field: string, prices: number[],): any {\n\n        let minimalPrice = prices[0];\n        let maximalPrice = prices[1];\n\n        let filtered = [];\n\n        if (minimalPrice != undefined && maximalPrice != undefined){\n            filtered = ulaz.filter(a => a.price >= minimalPrice);\n            filtered = filtered.filter(a => a.price <= maximalPrice);\n        } else if (minimalPrice != undefined) {\n            filtered = ulaz.filter(a => a.price >= minimalPrice);\n        } else if (maximalPrice != undefined) {\n            filtered = ulaz.filter(a => a.price <= maximalPrice);\n        } else {\n            return ulaz;\n        };\n\n        return filtered;\n    }\n\n}\n","export class User {\r\n    _id?: string;\r\n\r\n    username : string;\r\n    password : string;\r\n    email : string;\r\n    admin : boolean;\r\n\r\n    name : string;\r\n    surname : string;\r\n    dateOfBirth : string;\r\n\r\n    streetName : string;\r\n    streetNumber : string;\r\n    placeNameFK : string;\r\n}","import { Component, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { User } from '../shared/models/user.model';\nimport { UserDetailService } from '../shared/services/user-detail.service';\n\n@Component({\n    selector: 'app-user-detail',\n    templateUrl: './user-detail.component.html',\n    styleUrls: ['./user-detail.component.css']\n})\nexport class UserDetailComponent implements OnInit {\n\n    @Input() _id: string;\n\n    user : User = new User;\n    userSubject : BehaviorSubject<User> = new BehaviorSubject(null);\n    userSubscription : Subscription;\n\n    constructor(\n        private userDetailService : UserDetailService\n    ) { }\n\n    ngOnInit(): void {\n        this.userSubject = this.userDetailService.getUser(this._id);\n        this.userSubscription = this.userSubject\n            .subscribe(res => {\n                this.user = res;\n            });\n    }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-12\">\n            <div *ngIf=\"user\">\n                <h2 style=\"font-weight: lighter;\">Prodavač: <span style=\"font-weight: bold;\">{{user.username}}</span>\n                </h2>\n                <br>\n                <h2 style=\"font-weight: lighter;\">Kontakt: <span style=\"font-weight: bold;\">{{user.email}}</span></h2>\n            </div>\n        </div>\n    </div>\n</div>","export class Advertisement {\r\n    _id?: string;\r\n\r\n    name: string;\r\n    description: string;\r\n    price: string;\r\n\r\n    conditionNameFK: string;\r\n    categoryNameFK: string;\r\n    placeNameFK: string;\r\n\r\n    sellerUsernameFK: string;\r\n    seller_idFK: string;\r\n}","import { Component } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { AuthenticationService } from './shared/services/authentication.service';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n    constructor(\n        private authenticationService: AuthenticationService,\n        private title: Title\n    ) { }\n\n    ngOnInit() {\n        this.title.setTitle(\"PRODAJ BRZO\");\n        this.authenticationService.getUser();\n    }\n}\n","<app-navigation></app-navigation>\r\n\r\n<br><br>\r\n\r\n<router-outlet></router-outlet>","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { User } from '../models/user.model';\nimport { DataService } from './data.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthenticationService {\n\n    private user : User;\n\n    public authenticationChangeSubject: Subject<boolean> = new Subject<boolean>();\n    public authenticationErrorSubject: Subject<string> = new Subject<string>();\n\n    constructor(\n        private dataService: DataService,\n        private router: Router\n    ) { }\n\n    loginUser(username, password) {\n        this.dataService\n            .authenticateUser(username, password)\n            .subscribe((res: { status: number; description?: string; user?: User }) => {\n                if (res.status == 200) {\n                    this.user = res.user;\n\n                    localStorage.setItem('user', JSON.stringify(this.user));\n                    this.authenticationChangeSubject.next(true);\n\n                    this.router.navigate(['/']);\n                } else {\n                    this.authenticationErrorSubject.next(res.description);\n                }\n            });\n    }\n\n    logoutUser() {\n        this.user = null;\n        localStorage.removeItem('user');\n\n        this.authenticationChangeSubject.next(false);\n        this.router.navigate(['']);\n    }\n\n    getUser() {\n        if (this.user) {\n            return this.user;\n        } else {\n            this.user = JSON.parse(localStorage.getItem('user'));\n            return this.user;\n        }\n    }\n\n    checkIfAuthenticated() {\n        if (this.user) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    checkIfAdmin() {\n        if (this.checkIfAuthenticated()) {\n            if (this.user.admin) {\n                return true;\n            } else if (this.user.admin) {\n                return false;\n            }\n        } else {\n            return false;\n        }\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { Advertisement } from '../shared/models/advertisement.model';\nimport { Category } from '../shared/models/category.model';\nimport { Condition } from '../shared/models/condition.model';\nimport { Place } from '../shared/models/place.model';\nimport { User } from '../shared/models/user.model';\nimport { AdvertisementService } from '../shared/services/advertisement.service';\nimport { AuthenticationService } from '../shared/services/authentication.service';\nimport { AuthorizationGuardService } from '../shared/services/authorization-guard.service';\nimport { CategoryService } from '../shared/services/category.service';\nimport { ConditionService } from '../shared/services/condition.service';\nimport { PlaceService } from '../shared/services/place.service';\nimport { UserService } from '../shared/services/user.service';\n\n@Component({\n    selector: 'app-new-advertisement',\n    templateUrl: './new-advertisement.component.html',\n    styleUrls: ['./new-advertisement.component.css']\n})\nexport class NewAdvertisementComponent implements OnInit {\n\n    public newAdvertisement: Advertisement;\n    public newAdvertisementForm!: FormGroup;\n\n    user : User;\n\n    categories : Category[];\n    categoriesSubject : BehaviorSubject<Category[]>;\n    categoriesSubscription : Subscription;\n\n    conditions : Condition[];\n    conditionsSubject : BehaviorSubject<Condition[]>;\n    conditionsSubscription : Subscription;\n\n    places : Place[];\n    placesSubject : BehaviorSubject<Place[]>;\n    placesSubscription : Subscription;\n\n    constructor(\n        private authenticationService : AuthenticationService,\n        private authorizationGuardService: AuthorizationGuardService,\n\n        private advertisementService : AdvertisementService,\n        \n        private categoriesService : CategoryService,\n        private conditionsService : ConditionService,\n        private placesService : PlaceService,\n\n        private formBuilder : FormBuilder,\n        private router : Router\n    ) { }\n\n    ngOnInit() : void {\n        this.user = this.authenticationService.getUser();\n        this.authorizationGuardService.canAcess();\n\n        this.categoriesSubject = this.categoriesService.getCategories();\n        this.categoriesSubscription = this.categoriesSubject\n            .subscribe(res => {\n                this.categories = res;\n            });\n\n        this.conditionsSubject = this.conditionsService.getConditions();\n        this.conditionsSubscription = this.conditionsSubject\n            .subscribe(res => {\n                this.conditions = res;\n            });\n\n        this.placesSubject = this.placesService.getPlaces();\n        this.placesSubscription = this.placesSubject\n            .subscribe(res => {\n                this.places = res;\n            });\n\n        this.newAdvertisementForm = this.formBuilder.group({\n            name: new FormControl(\"\", [Validators.required, Validators.minLength(4), Validators.maxLength(255)]),\n            description: new FormControl(\"\", Validators.required),\n            price: new FormControl(\"\", Validators.required),\n\n            conditionFK: new FormControl(\"\", Validators.required),\n            placeNameFK: new FormControl(\"\", Validators.required),\n            categoryNameFK: new FormControl(\"\", Validators.required)\n        });\n    }\n\n    get name() { return this.newAdvertisementForm.get(\"name\"); }\n    get description() { return this.newAdvertisementForm.get(\"description\"); }\n    get price() { return this.newAdvertisementForm.get(\"price\"); }\n\n    get conditionFK() { return this.newAdvertisementForm.get(\"conditionFK\"); }\n    get placeNameFK() { return this.newAdvertisementForm.get(\"placeNameFK\"); }\n    get categoryNameFK() { return this.newAdvertisementForm.get(\"categoryNameFK\"); }\n\n    get f() {\n        return this.newAdvertisementForm.controls;\n    }\n\n    onSubmit() {\n        this.newAdvertisement = new Advertisement();\n\n        this.newAdvertisement.name = this.newAdvertisementForm.value.name;\n        this.newAdvertisement.description = this.newAdvertisementForm.value.description;\n        this.newAdvertisement.price = this.newAdvertisementForm.value.price;\n\n        this.newAdvertisement.conditionNameFK = this.newAdvertisementForm.value.conditionFK;\n        this.newAdvertisement.placeNameFK = this.newAdvertisementForm.value.placeNameFK;\n        this.newAdvertisement.categoryNameFK = this.newAdvertisementForm.value.categoryNameFK;\n\n        this.newAdvertisement.sellerUsernameFK = this.user.username;\n        this.newAdvertisement.seller_idFK = this.user._id;\n\n        this.advertisementService.addAdvertisement(this.newAdvertisement);\n\n        console.log(this.newAdvertisement);\n        this.router.navigate([\"/\"]);\n    }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-12\">\n            <br>\n            <h1 class=\"text-center\">Novi oglas</h1>\n            <br>\n\n            <form [formGroup]=\"newAdvertisementForm\" (submit)=\"onSubmit()\">\n                <div class=\"form-group\">\n                    <label for=\"name\">Ime oglasa:</label>\n                    <input type=\"text\" class=\"form-control\" name=\"name\" id=\"name\" formControlName=\"name\" [ngClass]=\"{'is-invalid': ((name.dirty || name.touched) && name.invalid),\n                            'is-valid': ((name.dirty || name.touched) && name.valid) }\">\n\n                    <div class=\"invalid-feedback\">Molimo upišite ime oglasa</div>\n                </div>\n\n                <div class=\"form-group\">\n                    <label for=\"description\">Opis oglasa:</label>\n                    <textarea class=\"form-control\" name=\"description\" id=\"description\" formControlName=\"description\"\n                        [ngClass]=\"{'is-invalid': ((description.dirty || description.touched) && description.invalid),\n                        'is-valid': ((description.dirty || description.touched) && description.valid) }\"></textarea>\n\n                    <div class=\"invalid-feedback\">Molimo upišite opis oglasa</div>\n                </div>\n\n                <div class=\"form-row\">\n                    <div class=\"form-group col-12 col-lg-6\">\n                        <label for=\"description\">Cijena oglasa:</label>\n                        <input type=\"number\" class=\"form-control\" name=\"price\" id=\"price\" min=\"0\"\n                            formControlName=\"price\" [ngClass]=\"{'is-invalid': ((price.dirty || price.touched) && price.invalid),\n                            'is-valid': ((price.dirty || price.touched) && price.valid) }\">\n\n                        <div class=\"invalid-feedback\">Molimo upišite cijenu oglasa</div>\n                    </div>\n\n                    <div class=\"form-group col-12 col-lg-6\">\n                        <label for=\"conditionFK\">Odabir stanja:</label>\n                        <select class=\"form-control\" name=\"conditionFK\" id=\"conditionFK\" formControlName=\"conditionFK\"\n                            [ngClass]=\"{'is-invalid': ((conditionFK.dirty || conditionFK.touched) && (conditionFK.invalid || conditionFK.value == 'Odabir stanja')),\n                            'is-valid': ((conditionFK.dirty || conditionFK.touched) && conditionFK.valid) }\">\n\n                            <option selected>Odabir stanja</option>\n                            <option *ngFor=\"let condition of conditions\">{{condition.conditionName}}</option>\n                        </select>\n\n                        <div class=\"invalid-feedback\">Molimo Vas odaberite stanje proizvoda</div>\n                    </div>\n                </div>\n\n\n                <div class=\"form-row\">\n                    <div class=\"form-group col-12 col-lg-6\">\n                        <label for=\"categoryNameFK\">Odabir kategorije:</label>\n                        <select class=\"form-control\" name=\"categoryNameFK\" id=\"categoryNameFK\"\n                            formControlName=\"categoryNameFK\" [ngClass]=\"{'is-invalid': ((categoryNameFK.dirty || categoryNameFK.touched) && (categoryNameFK.invalid || categoryNameFK.value == 'Odabir kategorije')),\n                            'is-valid': ((categoryNameFK.dirty || categoryNameFK.touched) && categoryNameFK.valid) }\">\n\n                            <option selected>Odabir kategorije</option>\n                            <option *ngFor=\"let category of categories\">{{category.categoryName}}</option>\n                        </select>\n\n                        <div class=\"invalid-feedback\">Molimo Vas odaberite kategoriju proizvoda</div>\n                    </div>\n\n                    <div class=\"form-group col-12 col-lg-6\">\n                        <label for=\"placeNameFK\">Lokacija proizvoda:</label>\n                        <select class=\"form-control\" name=\"placeNameFK\" id=\"placeNameFK\" formControlName=\"placeNameFK\"\n                            [ngClass]=\"{'is-invalid': ((placeNameFK.dirty || placeNameFK.touched) && (placeNameFK.invalid || placeNameFK.value == 'Odabir mjesta')),\n                            'is-valid': ((placeNameFK.dirty || placeNameFK.touched) && placeNameFK.valid) }\">\n\n                            <option selected>Odabir mjesta</option>\n                            <option *ngFor=\"let place of places\">{{place.placeName}}</option>\n                        </select>\n\n                        <div class=\"invalid-feedback\">Molimo Vas odaberite lokaciju proizvoda</div>\n                    </div>\n                </div>\n\n                <div class=\"form-group\">\n                    <label>Korisničko ime prodavača:</label>\n                    <input class=\"form-control\" type=\"text\" placeholder=\"{{user.username}}\" readonly>\n                </div>\n\n                <br>\n                <br>\n\n                <div class=\"col text-center\">\n                    <input type=\"submit\" class=\"btn btn-primary\" value=\"Objavi oglas\"\n                        [disabled]=\"!newAdvertisementForm.valid\">\n                </div>\n\n                <br>\n                <br>\n\n                <a routerLink=\"/\" routerLinkActive=\"active\">Odustani</a>\n\n                <br>\n                <br>\n            </form>\n        </div>\n\n        <div class=\"col-lg-4\"></div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from './authentication.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthorizationGuardService {\n\n    constructor(\n        private authenticationServicervice : AuthenticationService,\n        private router : Router\n    ) { }\n\n    canAcess(){\n        if(!this.authenticationServicervice.checkIfAuthenticated()){\n            this.router.navigate(['/']);\n        } else {\n            return true;\n        }\n    }\n\n    canAccessAdmin(){\n        if(!this.authenticationServicervice.checkIfAdmin()){\n            this.router.navigate(['/']);\n        } else {\n            return true;\n        }\n    }\n\n    canNotAcessWhileLogged() {\n        if(this.authenticationServicervice.checkIfAuthenticated()){\n            this.router.navigate(['/']);\n        } else {\n            return true;\n        }\n    }\n\n\n}\n","import { BrowserModule, Title } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { MainPageComponent } from './main-page/main-page.component';\nimport { NavigationComponent } from './navigation/navigation.component';\nimport { NewAdvertisementComponent } from './new-advertisement/new-advertisement.component';\nimport { FilterPipe } from './pipes/filter.pipe';\nimport { FilterPricePipe } from './pipes/filter-price.pipe';\nimport { AdvertisementDetailComponent } from './advertisement-detail/advertisement-detail.component';\nimport { AdmincategoriesComponent } from './administration/admin-components/admincategories/admincategories.component';\nimport { AdministrationComponent } from './administration/administration.component';\nimport { AdminconditionsComponent } from './administration/admin-components/adminconditions/adminconditions.component';\nimport { AdminplacesComponent } from './administration/admin-components/adminplaces/adminplaces.component';\nimport { AdminadvertisementsComponent } from './administration/admin-components/adminadvertisements/adminadvertisements.component';\nimport { UserDetailComponent } from './user-detail/user-detail.component';\nimport { MyProfileComponent } from './my-profile/my-profile.component';\nimport { MyAdvertisementsComponent } from './my-advertisements/my-advertisements.component';\nimport { AdminusersComponent } from './administration/admin-components/adminusers/adminusers.component';\nimport { AdvertisementEditComponent } from './advertisement-edit/advertisement-edit.component';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        LoginComponent,\n        RegisterComponent,\n        MainPageComponent,\n        NavigationComponent,\n        NewAdvertisementComponent,\n        FilterPipe,\n        FilterPricePipe,\n        AdvertisementDetailComponent,\n        AdmincategoriesComponent,\n        AdministrationComponent,\n        AdminconditionsComponent,\n        AdminplacesComponent,\n        AdminadvertisementsComponent,\n        UserDetailComponent,\n        MyProfileComponent,\n        MyAdvertisementsComponent,\n        AdminusersComponent,\n        AdvertisementEditComponent\n    ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        HttpClientModule,\n        ReactiveFormsModule,\n        FormsModule\n    ],\n    providers: [\n        Title\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { Place } from 'src/app/shared/models/place.model';\nimport { PlaceService } from 'src/app/shared/services/place.service';\n\n@Component({\n    selector: 'app-adminplaces',\n    templateUrl: './adminplaces.component.html',\n    styleUrls: ['./adminplaces.component.css']\n})\nexport class AdminplacesComponent implements OnInit {\n\n    places : Place[];\n    placesSubject : BehaviorSubject<Place[]> = new BehaviorSubject(null);\n    subscription : Subscription;\n\n    newPlaceName : string;\n\n    edit_id : string;\n    editPlaceName : string;\n\n    onePlace : Place;\n\n    constructor(\n        private placeService : PlaceService\n    ) { }\n\n    ngOnInit() : void {\n        this.placesSubject = this.placeService.getPlaces();\n        this.subscription = this.placesSubject\n            .subscribe(res => {\n                this.places = res;\n            });\n    }\n\n    addPlace() {\n        this.placeService.addPlace({ placeName : this.newPlaceName});\n        this.newPlaceName = \"\";\n    }\n\n    sendToEdit(place) {\n        this.edit_id = place._id;\n        this.editPlaceName = place.placeName;\n    }\n\n    editPlace(place) {\n        this.placeService.editPlace(place);\n    }\n\n    getPlace(i) {\n        let p = this.places[i];\n        console.log(this.placeService.getPlace(p._id));\n    }\n\n    deletePlace(i) {\n        let p = this.places[i];\n        this.placeService.deletePlace(p._id);\n    }\n\n    ngOnDestroy() {\n        this.subscription.unsubscribe();\n    }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-12\">\n            <h1>Mjesta</h1>\n        </div>\n    </div>\n</div>\n\n<br>\n\n<table class=\"table table-striped table-bordered table-hover\">\n    <tr>\n        <th>i</th>\n        <th>_id</th>\n        <th>placeName</th>\n        <th>getPlace(i)</th>\n        <th>sendToEdit(place)</th>\n        <th>deletePlace(i)</th>\n    </tr>\n\n    <tr *ngFor=\"let place of places; let i=index;\">\n        <td>{{i+1}}</td>\n\n        <td>{{place._id}}</td>\n        <td>{{place.placeName}}</td>\n\n        <td><button class=\"btn btn-success\" (click)=\"getPlace(i)\">Ispiši mjesto</button></td>\n        <td><button class=\"btn btn-warning\" (click)=\"sendToEdit(place)\">Uredi mjesto</button></td>\n        <td><button class=\"btn btn-danger\" (click)=\"deletePlace(i)\">Obriši mjesto</button></td>\n    </tr>\n</table>\n\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-6\">\n            <h3>Novo mjesto</h3>\n            <div class=\"form-group\">\n                <input type=\"text\" class=\"form-control\" [(ngModel)]=\"newPlaceName\">\n                <br>\n                <button class=\"btn btn-info\" (click)=\"addPlace()\">Dodaj</button>\n            </div>\n        </div>\n\n        <div class=\"col-6\">\n            <h3>Uredi mjesto: {{edit_id}}</h3>\n                <div class=\"form-group\">\n                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"editPlaceName\">\n                    <br>\n                    <button class=\"btn btn-info\"\n                        (click)=\"editPlace({_id : this.edit_id, placeName : this.editPlaceName})\">Uredi</button>\n                </div>\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Condition } from '../models/condition.model';\nimport { DataService } from './data.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ConditionService {\n\n    conditions : Condition[] = null;\n    conditionsSubject : BehaviorSubject<Condition[]> = new BehaviorSubject(null);\n\n    constructor(private dataService : DataService) { this.ngOnInit(); }\n\n    ngOnInit() {\n        this.dataService.getConditions()\n            .subscribe((res: { status: number, description?: string, conditions: Condition[] }) => {\n                console.log(res);\n                this.conditions = res.conditions;\n                this.conditionsSubject.next(this.conditions);\n            });\n    }\n\n    getConditions() {\n        return this.conditionsSubject;\n    }\n\n    addCondition(newCondition) {\n        this.dataService.addCondition(newCondition)\n            .subscribe((res: { status: number, description?: string, insertedId?: number }) => {\n                console.log(res);\n                newCondition._id = res.insertedId;\n                this.conditions.push(newCondition);\n                this.conditionsSubject.next(this.conditions);\n            });\n    }\n\n    editCondition(editedCondition) {\n        this.dataService.editCondition(editedCondition)\n            .subscribe(((res: { status: number, description?: string, modifiedCount?: number }) => {\n                console.log(res);\n                this.conditions[this.conditions.findIndex(c => c._id == editedCondition._id)] = editedCondition;\n            }), error => {\n                console.log(error);\n            });\n    }\n\n    getCondition(_id) {\n        return this.conditions.find(c => c._id == _id);\n    }\n\n    deleteCondition(_id) {\n        this.dataService.deleteCondition(_id)\n            .subscribe((res: { status: number, description?: string, deletedCount: number }) => {\n                console.log(res);\n                this.conditions = this.conditions.filter(c => c._id != _id);\n                this.conditionsSubject.next(this.conditions);\n            });\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { Category } from '../../../shared/models/category.model';\nimport { CategoryService } from '../../../shared/services/category.service';\n\n@Component({\n    selector: 'app-admincategories',\n    templateUrl: './admincategories.component.html',\n    styleUrls: ['./admincategories.component.css']\n})\nexport class AdmincategoriesComponent implements OnInit {\n\n    categories : Category[];\n    categoriesSubject : BehaviorSubject<Category[]> = new BehaviorSubject(null);\n    subscription : Subscription;\n\n    newCategoryName : string;\n\n    edit_id : string;\n    editCategoryName : string;\n\n    oneCategory : Category;\n  \n    constructor(\n        private categoryService : CategoryService\n    ) { }\n\n    ngOnInit() : void {\n        this.categoriesSubject = this.categoryService.getCategories();\n        this.subscription = this.categoriesSubject\n            .subscribe(res => {\n                this.categories = res;\n            });\n    }\n\n    addCategory() {\n        this.categoryService.addCategory({ categoryName : this.newCategoryName});\n        this.newCategoryName = \"\";\n    }\n\n    sendToEdit(category) {\n        this.edit_id = category._id;\n        this.editCategoryName = category.categoryName;\n    }\n\n    editCategory(category) {\n        this.categoryService.editCategory(category);\n    }\n\n    getCategory(i) {\n        let c = this.categories[i];\n        console.log(this.categoryService.getCategory(c._id));\n    }\n\n    deleteCategory(i) {\n        let c = this.categories[i];\n        this.categoryService.deleteCategory(c._id);\n    }\n\n    ngOnDestroy() {\n        this.subscription.unsubscribe();\n    }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-12\">\n            <h1>Kategorije</h1>\n        </div>\n    </div>\n</div>\n\n<br>\n\n<table class=\"table table-striped table-bordered table-hover\">\n    <tr>\n        <th>i</th>\n        <th>_id</th>\n        <th>categoryName</th>\n        <th>getCategory(i)</th>\n        <th>sendToEdit(category)</th>\n        <th>deleteCategory(i)</th>\n    </tr>\n\n    <tr *ngFor=\"let category of categories; let i=index;\">\n        <td>{{i+1}}</td>\n\n        <td>{{category._id}}</td>\n        <td>{{category.categoryName}}</td>\n\n        <td><button class=\"btn btn-success\" (click)=\"getCategory(i)\">Ispiši kategoriju</button></td>\n        <td><button class=\"btn btn-warning\" (click)=\"sendToEdit(category)\">Uredi kategoriju</button></td>\n        <td><button class=\"btn btn-danger\" (click)=\"deleteCategory(i)\">Izbriši kategoriju</button></td>\n    </tr>\n</table>\n\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-6\">\n            <h3>Nova kategorija</h3>\n            <div class=\"form-group\">\n                <input type=\"text\" class=\"form-control\" [(ngModel)]=\"newCategoryName\">\n                <br>\n                <button class=\"btn btn-info\" (click)=\"addCategory()\">Dodaj</button>\n            </div>\n        </div>\n\n        <div class=\"col-6\">\n            <h3>Uredi kategoriju: {{edit_id}}</h3>\n                <div class=\"form-group\">\n                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"editCategoryName\">\n                    <br>\n                    <button class=\"btn btn-info\"\n                        (click)=\"editCategory({_id : this.edit_id, categoryName : this.editCategoryName})\">Uredi</button>\n                </div>\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { User } from '../models/user.model';\nimport { DataService } from './data.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UserDetailService {\n\n    user : User = new User;\n    userSubject : BehaviorSubject<User> = new BehaviorSubject(null);\n\n    constructor( private dataService : DataService ) { }\n\n    getUser(_id) {\n        this.dataService.getUser(_id)\n            .subscribe((res: { status: number, description?: string, user: User }) => {\n                console.log(res);\n                this.user = res.user;\n                this.userSubject.next(this.user);\n            });\n    \n            return this.userSubject;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Category } from '../models/category.model';\nimport { DataService } from './data.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CategoryService {\n\n    categories: Category[] = null;\n    categoriesSubject: BehaviorSubject<Category[]> = new BehaviorSubject(null);\n\n    constructor(private dataService: DataService) { this.ngOnInit(); }\n\n    ngOnInit() {\n        this.dataService.getCategories()\n            .subscribe((res: { status: number, description?: string, categories: Category[] }) => {\n                console.log(res);\n                this.categories = res.categories;\n                this.categoriesSubject.next(this.categories);\n            });\n    }\n\n    getCategories() {\n        return this.categoriesSubject;\n    }\n\n    addCategory(newCategory) {\n        this.dataService.addCategory(newCategory)\n            .subscribe((res: { status: number, description?: string, insertedId?: number }) => {\n                console.log(res);\n                newCategory._id = res.insertedId;\n                this.categories.push(newCategory);\n                this.categoriesSubject.next(this.categories);\n            });\n    }\n\n    editCategory(editedCategory) {\n        this.dataService.editCategory(editedCategory)\n            .subscribe(((res: { status: number, description?: string, modifiedCount?: number }) => {\n                console.log(res);\n                this.categories[this.categories.findIndex(c => c._id == editedCategory._id)] = editedCategory;\n            }), error => {\n                console.log(error);\n            });\n    }\n\n    getCategory(_id) {\n        /*this.dataService.getCategory(_id)\n            .subscribe((res: {status : number, description? : string, category : Category}) => {\n                console.log(res.category);\n            });*/\n\n        return this.categories.find(c => c._id == _id);\n    }\n\n    deleteCategory(_id) {\n        this.dataService.deleteCategory(_id)\n            .subscribe((res: { status: number, description?: string, deletedCount: number }) => {\n                console.log(res);\n                this.categories = this.categories.filter(c => c._id != _id);\n                this.categoriesSubject.next(this.categories);\n            });\n    }\n}\n","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DataService {\n\n    apiRoot = environment.apiRoot;\n\n    authenticationRoot = '/authentication'\n    advertisementsRoot = '/advertisements';\n    categoriesRoot = '/categories';\n    conditionsRoot = '/conditions';\n    placesRoot = '/places';\n    usersRoot = '/users';\n\n    constructor(private http: HttpClient) { }\n\n    authenticateUser(username, password) {\n        return this.http.post(this.apiRoot + this.authenticationRoot, {\n            username: username,\n            password: password,\n        });\n    }\n\n    getAdvertisements() { return this.http.get(this.apiRoot + this.advertisementsRoot); }\n    addAdvertisement(advertisement) { return this.http.post(this.apiRoot + this.advertisementsRoot, advertisement); }\n    editAdvertisement(advertisement) { return this.http.put(this.apiRoot + this.advertisementsRoot, advertisement); }\n    getAdvertisement(id) { return this.http.get(this.apiRoot + this.advertisementsRoot + `/${id}`); }\n    deleteAdvertisement(id) { return this.http.delete(this.apiRoot + this.advertisementsRoot + `/${id}`); }\n\n    getCategories() { return this.http.get(this.apiRoot + this.categoriesRoot); }\n    addCategory(category) { return this.http.post(this.apiRoot + this.categoriesRoot, category); }\n    editCategory(category) { return this.http.put(this.apiRoot + this.categoriesRoot, category); }\n    getCategory(id) { return this.http.get(this.apiRoot + this.categoriesRoot + `/${id}`); }\n    deleteCategory(id) { return this.http.delete(this.apiRoot + this.categoriesRoot + `/${id}`); }\n\n    getConditions() { return this.http.get(this.apiRoot + this.conditionsRoot); }\n    addCondition(condition) { return this.http.post(this.apiRoot + this.conditionsRoot, condition); }\n    editCondition(condition) { return this.http.put(this.apiRoot + this.conditionsRoot, condition); }\n    getCondition(id) { return this.http.get(this.apiRoot + this.conditionsRoot + `/${id}`); }\n    deleteCondition(id) { return this.http.delete(this.apiRoot + this.conditionsRoot + `/${id}`); }\n\n    getPlaces() { return this.http.get(this.apiRoot + this.placesRoot); }\n    addPlace(place) { return this.http.post(this.apiRoot + this.placesRoot, place); }\n    editPlace(place) { return this.http.put(this.apiRoot + this.placesRoot, place); }\n    getPlace(id) { return this.http.get(this.apiRoot + this.placesRoot + `/${id}`); }\n    deletePlace(id) { return this.http.delete(this.apiRoot + this.placesRoot + `/${id}`); }\n\n    getUsers() { return this.http.get(this.apiRoot + this.usersRoot); }\n    addUser(user) { return this.http.post(this.apiRoot + this.usersRoot, user); }\n    editUser(user) { return this.http.put(this.apiRoot + this.usersRoot, user); }\n    getUser(id) { return this.http.get(this.apiRoot + this.usersRoot + `/${id}`); }\n    deleteUser(id) { return this.http.delete(this.apiRoot + this.usersRoot + `/${id}`); }\n}","<nav class=\"navbar navbar-expand-md navbar-dark bg-danger\">\n    <ul class=\"navbar-nav mr-auto\">\n        <li class=\"nav-item\">\n            <a class=\"navbar-brand\" routerLink=\"/\" routerLinkActive=\"active\">\n                <img src=\"assets/img/logo.png\" height=\"30\" class=\"d-inline-block align-top\" alt=\"\">\n            </a>\n        </li>\n    </ul>\n\n    <ul class=\"navbar-nav ml-auto\" style=\"float: right;\">\n        <div *ngIf=\"userIsLogged; else userIsNotLogged\">\n            <div *ngIf=\"userIsAdmin; else userIsNotAdmin\">\n                <li class=\"nav-item\" style=\"float: left;\">\n                    <a class=\"nav-link text-light\" routerLink=\"/administracija\" routerLinkActive=\"active\">Administracija</a>\n                </li>\n\n                <li class=\"nav-item\" style=\"float: left; border-left: 1px solid rgb(255,255,255);\">\n                    <a class=\"nav-link text-light\" routerLink=\"/novioglas\" routerLinkActive=\"active\">Novi oglas</a>\n                </li>\n\n                <li class=\"nav-item\" style=\"float: left; border-left: 1px solid rgb(255,255,255);\">\n                    <a class=\"nav-link text-light\" routerLink=\"/mojioglasi\" routerLinkActive=\"active\">Moji oglasi</a>\n                </li>\n\n                <li class=\"nav-item\" style=\"float: left; border-left: 1px solid rgb(255,255,255);\">\n                    <a class=\"nav-link text-light\" routerLink=\"/mojiprofil\" routerLinkActive=\"active\">Moji profil</a>\n                </li>\n\n                <li class=\"nav-item\" style=\"float: left; border-left: 1px solid rgb(255,255,255);\">\n                    <a class=\"nav-link text-light\" (click)=\"logout()\">Odjava</a>\n                </li>\n            </div>\n\n\n            <ng-template #userIsNotAdmin>\n                <li class=\"nav-item\" style=\"float: left;\">\n                    <a class=\"nav-link text-light\" routerLink=\"/novioglas\" routerLinkActive=\"active\">Novi oglas</a>\n                </li>\n\n                <li class=\"nav-item\" style=\"float: left; border-left: 1px solid rgb(255,255,255);\">\n                    <a class=\"nav-link text-light\" routerLink=\"/mojioglasi\" routerLinkActive=\"active\">Moji oglasi</a>\n                </li>\n\n                <li class=\"nav-item\" style=\"float: left; border-left: 1px solid rgb(255,255,255);\">\n                    <a class=\"nav-link text-light\" routerLink=\"/mojiprofil\" routerLinkActive=\"active\">Moji profil</a>\n                </li>\n\n                <li class=\"nav-item\" style=\"float: left; border-left: 1px solid rgb(255,255,255);\">\n                    <a class=\"nav-link text-light\" (click)=\"logout()\">Odjava</a>\n                </li>\n\n            </ng-template>\n        </div>\n\n        <ng-template #userIsNotLogged>\n            <li class=\"nav-item\" style=\"float: left;\">\n                <a class=\"nav-link text-light\" routerLink=\"/prijava\" routerLinkActive=\"active\">Prijava</a>\n            </li>\n\n            <li class=\"nav-item\" style=\"float: left; border-left: 1px solid rgb(255,255,255);\">\n                <a class=\"nav-link text-light\" routerLink=\"/registracija\" routerLinkActive=\"active\">Registracija</a>\n            </li>\n        </ng-template>\n    </ul>\n</nav>","import { Component, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { User } from '../shared/models/user.model';\nimport { AuthenticationService } from '../shared/services/authentication.service';\n\n@Component({\n    selector: 'app-navigation',\n    templateUrl: './navigation.component.html',\n    styleUrls: ['./navigation.component.css']\n})\nexport class NavigationComponent implements OnInit {\n\n    userIsLogged: boolean = false;\n    userIsAdmin: boolean = false;\n\n    authenticationChangeSubscription: Subscription;\n    user: User;\n\n    constructor(\n        private authenticationService: AuthenticationService,\n    ) { }\n\n    ngOnInit(): void {\n        this.userIsLogged = this.authenticationService.checkIfAuthenticated();\n        this.userIsAdmin = this.authenticationService.checkIfAdmin();\n\n        this.authenticationChangeSubscription = this.authenticationService.authenticationChangeSubject\n            .subscribe((res: boolean) => {\n                console.log(res);\n                this.userIsLogged = res;\n\n                this.userIsAdmin = this.authenticationService.checkIfAdmin();\n\n                /*if (this.isUserAuthenticated) {\n                    this.user = this.authService.getUser();\n                }*/\n            });\n    }\n\n    logout() {\n        this.authenticationService.logoutUser();\n    }\n\n    ngOnDestroy() {\n        this.authenticationChangeSubscription.unsubscribe();\n    }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-12\">\n            <div *ngIf=\"user\">\n                <h1 style=\"font-weight: lighter;\">Korisničko ime:\n                    <span style=\"font-weight: bold;\">{{user.username}}</span>\n                </h1>\n                <br>\n                <h2 style=\"font-weight: lighter;\">email:\n                    <span style=\"font-weight: bold;\">{{user.email}}</span>\n                </h2>\n                <br>\n                <h2 style=\"font-weight: lighter;\">Admin:\n                    <span style=\"font-weight: bold;\">{{user.admin}}</span>\n                </h2>\n                <br>\n                <h2 style=\"font-weight: lighter;\">Ime:\n                    <span style=\"font-weight: bold;\">{{user.name}}</span>\n                </h2>\n                <br>\n                <h2 style=\"font-weight: lighter;\">Prezime:\n                    <span style=\"font-weight: bold;\">{{user.surname}}</span>\n                </h2>\n                <br>\n                <h2 style=\"font-weight: lighter;\">Datum rođenja:\n                    <span style=\"font-weight: bold;\">{{user.dateOfBirth}}</span>\n                </h2>\n                <br>\n                <h2 style=\"font-weight: lighter;\">Adresa:\n                    <span style=\"font-weight: bold;\">{{user.streetName}} {{user.streetNumber}},\n                        {{user.placeNameFK}}</span>\n                </h2>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { User } from '../shared/models/user.model';\nimport { AuthenticationService } from '../shared/services/authentication.service';\nimport { AuthorizationGuardService } from '../shared/services/authorization-guard.service';\n\n@Component({\n    selector: 'app-my-profile',\n    templateUrl: './my-profile.component.html',\n    styleUrls: ['./my-profile.component.css']\n})\nexport class MyProfileComponent implements OnInit {\n\n    user : User;\n\n    constructor(\n        private authorizationGuardService: AuthorizationGuardService,\n        private authenticationService : AuthenticationService\n    ) { }\n\n    ngOnInit() : void {\n        this.authorizationGuardService.canAccessAdmin();\n        this.user = this.authenticationService.getUser()\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { User } from '../models/user.model';\nimport { DataService } from './data.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UserService {\n\n    users: User[] = null;\n    usersSubject: BehaviorSubject<User[]> = new BehaviorSubject(null);\n\n    constructor(private dataService: DataService) { this.ngOnInit(); }\n\n    ngOnInit() {\n        this.dataService.getUsers()\n            .subscribe((res: { status: number, description?: string, users: User[] }) => {\n                console.log(res);\n                this.users = res.users;\n                this.usersSubject.next(this.users);\n            });\n    }\n\n    getUsers() {\n        return this.usersSubject;\n    }\n\n    addUser(newUser) {\n        this.dataService.addUser(newUser)\n            .subscribe((res: { status: number, description?: string, insertedId?: number }) => {\n                console.log(res);\n                newUser._id = res.insertedId;\n                this.users.push(newUser);\n                this.usersSubject.next(this.users);\n            });\n    }\n\n    editUser(editedUser) {\n        this.dataService.editUser(editedUser)\n            .subscribe(((res: { status: number, description?: string, modifiedCount?: number }) => {\n                console.log(res);\n                this.users[this.users.findIndex(u => u._id == editedUser._id)] = editedUser;\n            }), error => {\n                console.log(error);\n            });\n    }\n\n    getUser(_id) {\n        return this.users.find(u => u._id == _id);\n    }\n\n    deleteUser(_id) {\n        this.dataService.deleteUser(_id)\n            .subscribe((res: { status: number, description?: string, deletedCount: number }) => {\n                console.log(res);\n                this.users = this.users.filter(u => u._id != _id);\n                this.usersSubject.next(this.users);\n            });\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { Advertisement } from 'src/app/shared/models/advertisement.model';\nimport { AdvertisementService } from 'src/app/shared/services/advertisement.service';\n\n@Component({\n    selector: 'app-adminadvertisements',\n    templateUrl: './adminadvertisements.component.html',\n    styleUrls: ['./adminadvertisements.component.css']\n})\nexport class AdminadvertisementsComponent implements OnInit {\n\n    advertisements : Advertisement[];\n    advertisementsSubject : BehaviorSubject<Advertisement[]> = new BehaviorSubject(null);\n    subscription : Subscription;\n\n    oneAdvertisement : Advertisement;\n\n    constructor(\n        private advertisementService : AdvertisementService\n    ) { }\n\n    ngOnInit() : void {\n        this.advertisementsSubject = this.advertisementService.getAdvertisements();\n        this.subscription = this.advertisementsSubject\n            .subscribe(res => {\n                this.advertisements = res;\n            });\n    }\n\n    getAdvertisement(i) {\n        let a = this.advertisements[i];\n        console.log(this.advertisementService.getAdvertisement(a._id));\n    }\n\n    deleteAdvertisement(i) {\n        let a = this.advertisements[i];\n        this.advertisementService.deleteAdvertisement(a._id);\n    }\n\n    ngOnDestory() {\n        this.subscription.unsubscribe();\n    }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-12\">\n            <h1>Oglasi</h1>\n        </div>\n    </div>\n</div>\n\n<br>\n\n<table class=\"table table-striped table-bordered table-hover\">\n    <tr>\n        <th>i</th>\n        <th>_id</th>\n\n        <th>name</th>\n        <th>description</th>\n        <th>price</th>\n\n        <th>conditionNameFK</th>\n        <th>categoryNameFK</th>\n        <th>placeNameFK</th>\n\n        \n        <th>sellerUsernameFK</th>\n        <th>seller_idFK</th>\n        \n        <th>getAdvertisement(i)</th>\n        <th>deleteAdvertisement(i)</th>\n    </tr>\n\n    <tr *ngFor=\"let advertisement of advertisements; let i=index;\">\n        <td>{{i+1}}</td>\n        <td>{{advertisement._id}}</td>\n\n        <td><a [routerLink]=\"['../oglas/', advertisement._id]\">{{advertisement.name}}</a></td>\n        <td>{{advertisement.description}}</td>\n        <td>{{advertisement.price}}</td>\n\n        <td>{{advertisement.conditionNameFK}}</td>\n        <td>{{advertisement.categoryNameFK}}</td>\n        <td>{{advertisement.placeNameFK}}</td>\n\n        <td>{{advertisement.sellerUsernameFK}}</td>\n        <td>{{advertisement.seller_idFK}}</td>\n\n        <td><button class=\"btn btn-success\" (click)=\"getAdvertisement(i)\">Ispiši oglas</button></td>\n        <td><button class=\"btn btn-danger\" (click)=\"deleteAdvertisement(i)\">Izbriši oglas</button></td>\n    </tr>\n</table>","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Place } from '../models/place.model';\nimport { DataService } from './data.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PlaceService {\n\n    places : Place[] = null;\n    placesSubject : BehaviorSubject<Place[]> = new BehaviorSubject(null);\n\n    constructor(private dataService: DataService) { this.ngOnInit(); }\n\n    ngOnInit() {\n        this.dataService.getPlaces()\n            .subscribe((res: { status: number, description?: string, places: Place[] }) => {\n                console.log(res);\n                this.places = res.places;\n                this.placesSubject.next(this.places);\n            });\n    }\n\n    getPlaces() {\n        return this.placesSubject;\n    }\n\n    addPlace(newPlace) {\n        this.dataService.addPlace(newPlace)\n            .subscribe((res: { status: number, description?: string, insertedId?: number }) => {\n                console.log(res);\n                newPlace._id = res.insertedId;\n                this.places.push(newPlace);\n                this.placesSubject.next(this.places);\n            });\n    }\n\n    editPlace(editedPlace) {\n        this.dataService.editPlace(editedPlace)\n            .subscribe(((res: { status: number, description?: string, modifiedCount?: number }) => {\n                console.log(res);\n                this.places[this.places.findIndex(c => c._id == editedPlace._id)] = editedPlace;\n            }), error => {\n                console.log(error);\n            });\n    }\n\n    getPlace(_id) {\n        return this.places.find(p => p._id == _id);\n    }\n\n    deletePlace(_id) {\n        this.dataService.deletePlace(_id)\n            .subscribe((res: { status: number, description?: string, deletedCount: number }) => {\n                console.log(res);\n                this.places = this.places.filter(c => c._id != _id);\n                this.placesSubject.next(this.places);\n            });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Advertisement } from '../models/advertisement.model';\nimport { DataService } from './data.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AdvertisementService {\n\n    advertisements : Advertisement[] = null;\n    advertisementsSubject : BehaviorSubject<Advertisement[]> = new BehaviorSubject(null);\n    \n    constructor(private dataService : DataService) { this.ngOnInit(); }\n\n    ngOnInit() {\n        this.dataService.getAdvertisements()\n            .subscribe((res: { status: number, description?: string, advertisements: Advertisement[] }) => {\n                console.log(res);\n                this.advertisements = res.advertisements;\n                this.advertisementsSubject.next(this.advertisements);\n            });\n    }\n\n    getAdvertisements() {\n        return this.advertisementsSubject;\n    }\n\n    addAdvertisement(newAdvertisement) {\n        this.dataService.addAdvertisement(newAdvertisement)\n            .subscribe((res: { status: number, description?: string, insertedId?: number }) => {\n                console.log(res);\n                newAdvertisement._id = res.insertedId;\n                this.advertisements.push(newAdvertisement);\n                this.advertisementsSubject.next(this.advertisements);\n            });\n    }\n\n    editAdvertisement(editedAdvertisement) {\n        this.dataService.editAdvertisement(editedAdvertisement)\n            .subscribe(((res: { status: number, description?: string, modifiedCount?: number }) => {\n                console.log(res);\n                this.advertisements[this.advertisements.findIndex(a => a._id == editedAdvertisement._id)] = editedAdvertisement;\n            }), error => {\n                console.log(error);\n            });\n    }\n\n    getAdvertisement(_id) {\n        return this.advertisements.find(a => a._id == _id);\n    }\n\n    deleteAdvertisement(_id) {\n        this.dataService.deleteAdvertisement(_id)\n            .subscribe((res: { status: number, description?: string, deletedCount: number }) => {\n                console.log(res);\n                this.advertisements = this.advertisements.filter(a => a._id != _id);\n                this.advertisementsSubject.next(this.advertisements);\n            });\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AdvertisementDetailComponent } from './advertisement-detail/advertisement-detail.component';\nimport { LoginComponent } from './login/login.component';\nimport { MainPageComponent } from './main-page/main-page.component';\nimport { NewAdvertisementComponent } from './new-advertisement/new-advertisement.component';\nimport { RegisterComponent } from './register/register.component';\nimport { AdministrationComponent } from './administration/administration.component';\nimport { UserDetailComponent } from './user-detail/user-detail.component';\nimport { MyProfileComponent } from './my-profile/my-profile.component';\nimport { MyAdvertisementsComponent } from './my-advertisements/my-advertisements.component';\n\nconst routes: Routes = [\n    { path: \"\", component: MainPageComponent },\n    { path: \"prijava\", component: LoginComponent },\n    { path: \"registracija\", component: RegisterComponent },\n    { path: \"novioglas\", component: NewAdvertisementComponent },\n    { path: \"mojioglasi\", component: MyAdvertisementsComponent },\n    { path: \"mojiprofil\", component: MyProfileComponent },\n    { path: \"oglas/:id\", component: AdvertisementDetailComponent },\n    { path: \"korisnik/:id\", component: UserDetailComponent },\n    { path: \"administracija\", component: AdministrationComponent }\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { AuthenticationService } from '../shared/services/authentication.service';\nimport { AuthorizationGuardService } from '../shared/services/authorization-guard.service';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n    public registerForm : FormGroup;\n    errorMessage : string = null;\n\n    constructor(\n        private authorizationGuardService : AuthorizationGuardService,\n        private formBuilder : FormBuilder,\n        private authenticationService : AuthenticationService\n    ) { }\n\n    ngOnInit() : void {\n        this.authorizationGuardService.canNotAcessWhileLogged();\n\n        this.registerForm = this.formBuilder.group({\n            username: new FormControl(\"\", [Validators.required, Validators.minLength(4)]),\n            password: new FormControl(\"\", Validators.required)\n        });\n\n        this.authenticationService.authenticationErrorSubject\n            .subscribe((error : string) => {\n                this.errorMessage = error;\n                console.log(this.errorMessage);\n              });\n    }\n\n    get username() { return this.registerForm.get(\"username\"); }\n    get password() { return this.registerForm.get(\"password\"); }\n\n    onSubmit(): void {\n        this.authenticationService.loginUser(this.registerForm.value.username, this.registerForm.value.password);\n      \n    }\n\n}","<div class=\"container\">\n    <div class=\"row\" style=\"height: 75vh;\">\n        <div class=\"d-none d-lg-block col-lg-1\"></div>\n\n        <div class=\"col-12 col-lg-4 align-self-center\">\n            <br>\n            <h1 class=\"text-center\">Prijava</h1>\n            <br>\n\n            <a routerLink=\"/registracija\" routerLinkActive=\"active\">\n                <p style=\"text-align: center;\">Nemate korisnički profil? Idite na\n                registraciju</p></a>\n            <br>\n\n            <form [formGroup]=\"registerForm\" (submit)=\"onSubmit()\">\n                <div class=\"form-group\">\n                    <label for=\"username\">Korisničko ime:</label>\n                    <input type=\"text\" class=\"form-control\" name=\"username\" id=\"username\" formControlName=\"username\"\n                        [ngClass]=\"{'is-invalid': ((username.dirty || username.touched) && username.invalid),\n                        'is-valid': ((username.dirty || username.touched) && username.valid) }\">\n\n                    <div class=\"invalid-feedback\">Molimo Vas upišite Vaše korisničko ime</div>\n                </div>\n\n                <div class=\"form-group\">\n                    <label for=\"password\">Lozinka:</label>\n                    <input type=\"password\" class=\"form-control\" name=\"password\" id=\"password\" formControlName=\"password\"\n                        [ngClass]=\"{'is-invalid': ((password.dirty || password.touched) && password.invalid),\n                        'is-valid': ((password.dirty || password.touched) && password.valid) }\">\n\n                    <div class=\"invalid-feedback\">Molimo Vas upišite Vašu šifru</div>\n                </div>\n\n                <div class=\"col text-center\">\n                    <input type=\"submit\" class=\"btn btn-primary\" value=\"Prijavi me\" [disabled]=\"!registerForm.valid\">\n                </div>\n\n                <div *ngIf=\"errorMessage\">\n                    <p style=\"text-align: center; color: red;\">{{errorMessage}}</p>\n                    <br>\n                </div>\n            </form>\n        </div>\n\n        <div class=\"d-none d-lg-block col-lg-1\"></div>\n\n        <div class=\"d-none d-lg-block col-lg-5 align-self-center\">\n            <img src=\"assets/img/login.webp\" alt=\"\" style=\"width: 100%;\">\n        </div>\n\n        <div class=\"d-none d-lg-block col-lg-1\"></div>\n    </div>\n</div>","import { Component, Input, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { Advertisement } from '../shared/models/advertisement.model';\nimport { Category } from '../shared/models/category.model';\nimport { Condition } from '../shared/models/condition.model';\nimport { Place } from '../shared/models/place.model';\nimport { AdvertisementService } from '../shared/services/advertisement.service';\nimport { CategoryService } from '../shared/services/category.service';\nimport { ConditionService } from '../shared/services/condition.service';\nimport { PlaceService } from '../shared/services/place.service';\n\n@Component({\n    selector: 'app-advertisement-edit',\n    templateUrl: './advertisement-edit.component.html',\n    styleUrls: ['./advertisement-edit.component.css']\n})\nexport class AdvertisementEditComponent implements OnInit {\n\n    @Input() advertisement: Advertisement;\n\n    editedAdvertisement = new Advertisement();\n    public newAdvertisementForm : FormGroup;\n\n    categories: Category[];\n    categoriesSubject: BehaviorSubject<Category[]>;\n    categoriesSubscription: Subscription;\n\n    conditions: Condition[];\n    conditionsSubject: BehaviorSubject<Condition[]>;\n    conditionsSubscription: Subscription;\n\n    places: Place[];\n    placesSubject: BehaviorSubject<Place[]>;\n    placesSubscription: Subscription;\n\n    constructor(\n        private advertisementService: AdvertisementService,\n\n        private categoriesService: CategoryService,\n        private conditionsService: ConditionService,\n        private placesService: PlaceService,\n\n        private formBuilder: FormBuilder,\n        private router: Router) { }\n\n    ngOnInit(): void {\n        this.categoriesSubject = this.categoriesService.getCategories();\n        this.categoriesSubscription = this.categoriesSubject\n            .subscribe(res => {\n                this.categories = res;\n            });\n\n        this.conditionsSubject = this.conditionsService.getConditions();\n        this.conditionsSubscription = this.conditionsSubject\n            .subscribe(res => {\n                this.conditions = res;\n            });\n\n        this.placesSubject = this.placesService.getPlaces();\n        this.placesSubscription = this.placesSubject\n            .subscribe(res => {\n                this.places = res;\n            });\n\n        this.newAdvertisementForm = this.formBuilder.group({\n            name: new FormControl(this.advertisement.name, [Validators.required, Validators.minLength(4), Validators.maxLength(255)]),\n            description: new FormControl(this.advertisement.description, Validators.required),\n            price: new FormControl(this.advertisement.price, Validators.required),\n\n            conditionFK: new FormControl(this.advertisement.conditionNameFK, Validators.required),\n            placeNameFK: new FormControl(this.advertisement.placeNameFK, Validators.required),\n            categoryNameFK: new FormControl(this.advertisement.conditionNameFK, Validators.required)\n        });\n    }\n\n    get name() { return this.newAdvertisementForm.get(\"name\"); }\n    get description() { return this.newAdvertisementForm.get(\"description\"); }\n    get price() { return this.newAdvertisementForm.get(\"price\"); }\n\n    get conditionFK() { return this.newAdvertisementForm.get(\"conditionFK\"); }\n    get placeNameFK() { return this.newAdvertisementForm.get(\"placeNameFK\"); }\n    get categoryNameFK() { return this.newAdvertisementForm.get(\"categoryNameFK\"); }\n\n    get f() {\n        return this.newAdvertisementForm.controls;\n    }\n\n    onSubmit() {\n        this.editedAdvertisement = new Advertisement();\n\n        this.editedAdvertisement._id = this.advertisement._id;\n\n        this.editedAdvertisement.name = this.newAdvertisementForm.value.name;\n        this.editedAdvertisement.description = this.newAdvertisementForm.value.description;\n        this.editedAdvertisement.price = this.newAdvertisementForm.value.price;\n\n        this.editedAdvertisement.conditionNameFK = this.newAdvertisementForm.value.conditionFK;\n        this.editedAdvertisement.placeNameFK = this.newAdvertisementForm.value.placeNameFK;\n        this.editedAdvertisement.categoryNameFK = this.newAdvertisementForm.value.categoryNameFK;\n\n        this.editedAdvertisement.sellerUsernameFK = this.advertisement.sellerUsernameFK;\n        this.editedAdvertisement.seller_idFK = this.advertisement.seller_idFK;\n\n        this.advertisementService.editAdvertisement(this.editedAdvertisement);\n\n        console.log(this.editedAdvertisement);\n        this.router.navigate([\"/\"]);\n    }\n\n}","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-12\">\n            <br>\n            <h1 class=\"text-center\">Novi oglas</h1>\n            <br>\n\n            <form [formGroup]=\"newAdvertisementForm\" (submit)=\"onSubmit()\">\n                <div class=\"form-group\">\n                    <label for=\"name\">Ime oglasa:</label>\n                    <input type=\"text\" class=\"form-control\" name=\"name\" id=\"name\" formControlName=\"name\" [ngClass]=\"{'is-invalid': ((name.dirty || name.touched) && name.invalid),\n                            'is-valid': ((name.dirty || name.touched) && name.valid) }\">\n\n                    <div class=\"invalid-feedback\">Molimo upišite ime oglasa</div>\n                </div>\n\n                <div class=\"form-group\">\n                    <label for=\"description\">Opis oglasa:</label>\n                    <textarea class=\"form-control\" name=\"description\" id=\"description\" formControlName=\"description\"\n                        [ngClass]=\"{'is-invalid': ((description.dirty || description.touched) && description.invalid),\n                        'is-valid': ((description.dirty || description.touched) && description.valid) }\"></textarea>\n\n                    <div class=\"invalid-feedback\">Molimo upišite opis oglasa</div>\n                </div>\n\n                <div class=\"form-row\">\n                    <div class=\"form-group col-12 col-lg-6\">\n                        <label for=\"description\">Cijena oglasa:</label>\n                        <input type=\"number\" class=\"form-control\" name=\"price\" id=\"price\" min=\"0\"\n                            formControlName=\"price\" [ngClass]=\"{'is-invalid': ((price.dirty || price.touched) && price.invalid),\n                            'is-valid': ((price.dirty || price.touched) && price.valid) }\">\n\n                        <div class=\"invalid-feedback\">Molimo upišite cijenu oglasa</div>\n                    </div>\n\n                    <div class=\"form-group col-12 col-lg-6\">\n                        <label for=\"conditionFK\">Odabir stanja:</label>\n                        <select class=\"form-control\" name=\"conditionFK\" id=\"conditionFK\" formControlName=\"conditionFK\"\n                            [ngClass]=\"{'is-invalid': ((conditionFK.dirty || conditionFK.touched) && (conditionFK.invalid || conditionFK.value == 'Odabir stanja')),\n                            'is-valid': ((conditionFK.dirty || conditionFK.touched) && conditionFK.valid) }\">\n\n                            <option selected>Odabir stanja</option>\n                            <option *ngFor=\"let condition of conditions\">{{condition.conditionName}}</option>\n                        </select>\n\n                        <div class=\"invalid-feedback\">Molimo Vas odaberite stanje proizvoda</div>\n                    </div>\n                </div>\n\n\n                <div class=\"form-row\">\n                    <div class=\"form-group col-12 col-lg-6\">\n                        <label for=\"categoryNameFK\">Odabir kategorije:</label>\n                        <select class=\"form-control\" name=\"categoryNameFK\" id=\"categoryNameFK\"\n                            formControlName=\"categoryNameFK\" [ngClass]=\"{'is-invalid': ((categoryNameFK.dirty || categoryNameFK.touched) && (categoryNameFK.invalid || categoryNameFK.value == 'Odabir kategorije')),\n                            'is-valid': ((categoryNameFK.dirty || categoryNameFK.touched) && categoryNameFK.valid) }\">\n\n                            <option selected>Odabir kategorije</option>\n                            <option *ngFor=\"let category of categories\">{{category.categoryName}}</option>\n                        </select>\n\n                        <div class=\"invalid-feedback\">Molimo Vas odaberite kategoriju proizvoda</div>\n                    </div>\n\n                    <div class=\"form-group col-12 col-lg-6\">\n                        <label for=\"placeNameFK\">Lokacija proizvoda:</label>\n                        <select class=\"form-control\" name=\"placeNameFK\" id=\"placeNameFK\" formControlName=\"placeNameFK\"\n                            [ngClass]=\"{'is-invalid': ((placeNameFK.dirty || placeNameFK.touched) && (placeNameFK.invalid || placeNameFK.value == 'Odabir mjesta')),\n                            'is-valid': ((placeNameFK.dirty || placeNameFK.touched) && placeNameFK.valid) }\">\n\n                            <option selected>Odabir mjesta</option>\n                            <option *ngFor=\"let place of places\">{{place.placeName}}</option>\n                        </select>\n\n                        <div class=\"invalid-feedback\">Molimo Vas odaberite lokaciju proizvoda</div>\n                    </div>\n                </div>\n\n                <div class=\"form-group\">\n                    <label>Korisničko ime prodavača:</label>\n                    <input class=\"form-control\" type=\"text\" placeholder=\"{{advertisement.sellerUsernameFK}}\" readonly>\n                </div>\n\n                <br>\n                <br>\n\n                <div class=\"col text-center\">\n                    <input type=\"submit\" class=\"btn btn-primary\" value=\"Izmjeni oglas\"\n                        [disabled]=\"!newAdvertisementForm.valid\">\n                </div>\n\n                <br>\n                <br>\n\n                <a routerLink=\"/\" routerLinkActive=\"active\">Odustani</a>\n\n                <br>\n                <br>\n            </form>\n        </div>\n\n        <div class=\"col-lg-4\"></div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { Advertisement } from '../shared/models/advertisement.model';\nimport { User } from '../shared/models/user.model';\nimport { AdvertisementService } from '../shared/services/advertisement.service';\nimport { AuthenticationService } from '../shared/services/authentication.service';\nimport { AuthorizationGuardService } from '../shared/services/authorization-guard.service';\n\n@Component({\n    selector: 'app-my-advertisements',\n    templateUrl: './my-advertisements.component.html',\n    styleUrls: ['./my-advertisements.component.css']\n})\nexport class MyAdvertisementsComponent implements OnInit {\n\n    user : User;\n\n    advertisements : Advertisement[];\n    advertisementsSubject : BehaviorSubject<Advertisement[]> = new BehaviorSubject(null);\n    subscription : Subscription;\n\n    editMode : boolean = false;\n    advertisementForEdit : Advertisement;\n\n    constructor(\n        private authorizationGuardService: AuthorizationGuardService,\n        private authenticationService : AuthenticationService,\n        private advertisementService: AdvertisementService\n    ) { }\n\n    ngOnInit(): void {\n        this.authorizationGuardService.canAccessAdmin();\n        this.user = this.authenticationService.getUser();\n        \n        this.advertisementsSubject = this.advertisementService.getAdvertisements();\n        this.subscription = this.advertisementsSubject\n            .subscribe(res => {\n                this.advertisements = res;\n            });\n    }\n\n    deleteAdvertisement(i) {\n        let a = this.advertisements[i];\n        this.advertisementService.deleteAdvertisement(a._id);\n    }\n\n    ngOnDestory() {\n        this.subscription.unsubscribe();\n    }\n\n    userWantsToEdit(selectedAdvertisement) {\n        this.editMode = true;\n        this.advertisementForEdit = selectedAdvertisement;\n    }\n\n}","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-12\">\n            <h1>Oglasi</h1>\n        </div>\n    </div>\n</div>\n\n<br>\n\n<div *ngIf=\"user\">\n    <table class=\"table table-striped table-bordered table-hover\">\n        <tr>\n            <th>i</th>\n            <th>_id</th>\n\n            <th>Naziv</th>\n            <th>Opis</th>\n            <th>Cijena</th>\n\n            <th>Stanje</th>\n            <th>Kategorija</th>\n            <th>Lokacija</th>\n\n            <th>Uređivanje</th>\n            <th>Brisanje</th>\n        </tr>\n\n        <tr *ngFor=\"let advertisement of advertisements  | filter: 'seller_idFK' : user._id; let i=index;\">\n            <td>{{i+1}}</td>\n            <td>{{advertisement._id}}</td>\n\n            <td><a [routerLink]=\"['../oglas/', advertisement._id]\">{{advertisement.name}}</a></td>\n            <td>{{advertisement.description}}</td>\n            <td>{{advertisement.price}}</td>\n\n            <td>{{advertisement.conditionNameFK}}</td>\n            <td>{{advertisement.categoryNameFK}}</td>\n            <td>{{advertisement.placeNameFK}}</td>\n\n            <td><button class=\"btn btn-warning\" (click)=\"userWantsToEdit(advertisement)\">Uredi</button></td>\n            <td><button class=\"btn btn-danger\" (click)=\"deleteAdvertisement(i)\">Izbriši</button></td>\n        </tr>\n    </table>\n</div>\n\n<div *ngIf=\"editMode\">\n    <app-advertisement-edit [(advertisement)]=\"advertisementForEdit\"></app-advertisement-edit>\n</div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";","import { FormGroup } from '@angular/forms';\r\n\r\nexport function confirmedValidator(controlName: string, matchingControlName: string){\r\n    return (formGroup: FormGroup) => {\r\n        const control = formGroup.controls[controlName];\r\n        const matchingControl = formGroup.controls[matchingControlName];\r\n        if (matchingControl.errors && !matchingControl.errors.confirmedValidator) {\r\n            return;\r\n        }\r\n        if (control.value !== matchingControl.value) {\r\n            matchingControl.setErrors({ confirmedValidator: true });\r\n        } else {\r\n            matchingControl.setErrors(null);\r\n        }\r\n    }\r\n}"],"sourceRoot":"webpack:///"}